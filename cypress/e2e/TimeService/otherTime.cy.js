import { user, pass, login, setToken } from "../utils/auth"
import { makeText, makeRuName } from "../utils/func";

it("Start", () => {
    login(user.alex, pass.alex)
});

describe("addEditOtherTime", () => {

    beforeEach(setToken)

    it("DOW-42", () => {
        cy.url()
            .should('eq', 'https://dev.digital-office.dso.lanit-tercom.com/time')
        //cy.intercept('POST', '/worktime/edit*')                   //use if user add hours at first time
        //    .as('wt-created')
        cy.intercept('PATCH', '/worktime/edit*')
            .as('wt-edited')
        cy.get('mat-select[data-test*="month"]')
            .should('have.class', 'ng-star-inserted')
        cy.get('mat-select[formcontrolname="project"]')
            .click()
        cy.get('mat-option')
            .contains('Другое')
            .click()
        cy.get('input[formcontrolname="time"]')
            .clear()
            .type(Cypress._.random(1, 50))
        cy.get('textarea[formcontrolname="comment"]')
            .should('have.attr', 'maxlength')
            .and('eq', '500')
        cy.get('textarea[formcontrolname="comment"]')
            .clear()
        cy.get('do-add-work-time-hours > div[class*="form"]')
            .should('have.class', 'ng-invalid')                     //without comment the form is not valid
        cy.get('textarea[formcontrolname="comment"]')
            .type(makeText(30))
        cy.get('do-add-work-time-hours > div[class*="form"]')
            .should('have.class', 'ng-valid')
        cy.get('button[data-test*="save"]')
            .should('be.visible')
            .click()
        //cy.wait('@wt-created')                                    //use if user add hours at first time
        //    .its('response.statusCode').should('eq', 201)
        cy.wait('@wt-edited')
            .its('response.statusCode').should('eq', 200)
    });

    it("DOW-41", () => {
        cy.url()
            .should('eq', 'https://dev.digital-office.dso.lanit-tercom.com/time')
        cy.get('mat-select[data-test*="month"]')
            .should('have.class', 'ng-star-inserted')
        cy.get('mat-select[formcontrolname="project"]')
            .click()
        cy.get('mat-option')
            .contains('Другое')
            .click()
        cy.get('input[formcontrolname="time"]')
            .clear()
            .type(Cypress._.random(1, 50))
        cy.get('textarea[formcontrolname="comment"]')
            .clear()
        cy.get('do-add-work-time-hours > div[class*="form"]')
            .should('have.class', 'ng-invalid')                     //without comment the form is not valid
        cy.get('button[data-test*="save"]')
            .click()
        cy.get('do-form-field[label="Комментарий"] mat-error')
            .invoke('prop', 'innerText')
            .should('eq', 'Обязательно для заполнения')
        cy.get('do-form-field[label="Комментарий"] mat-error')
            .scrollIntoView()
            .should('be.visible')
        cy.reload().wait(200)
    });

    it("DOW-43", () => {
        cy.url()
            .should('eq', 'https://dev.digital-office.dso.lanit-tercom.com/time')
        cy.intercept('PATCH', '/worktime/edit*')
            .as('wt-edited')
        cy.get('mat-select[data-test*="month"]')
            .should('have.class', 'ng-star-inserted')
        cy.get('mat-select[formcontrolname="project"]')
            .click()
        cy.get('mat-option')
            .contains('Другое')
            .click()
        cy.get('input[formcontrolname="time"]')
            .clear()
            .type('0')
        cy.get('textarea[formcontrolname="comment"]')
            .clear()
            .type(makeText(30))
        cy.get('do-add-work-time-hours > div[class*="form"]')
            .should('have.class', 'ng-valid')
        cy.get('button[data-test*="save"]')
            .should('be.visible')
            .click()
        cy.wait('@wt-edited')
            .its('response.statusCode').should('eq', 200)
    });

    it("DOW-44", () => {
        cy.url()
            .should('eq', 'https://dev.digital-office.dso.lanit-tercom.com/time')
        cy.intercept('PATCH', '/worktime/edit*')
            .as('wt-edited')
        cy.get('mat-select[data-test*="month"]')
            .should('have.class', 'ng-star-inserted')
        cy.get('mat-select[formcontrolname="project"]')
            .click()
        cy.get('mat-option')
            .contains('Другое')
            .click()
        cy.get('input[formcontrolname="time"]')
            .clear()
            .type('1')
        cy.get('textarea[formcontrolname="comment"]')
            .clear()
            .type(makeText(30))
        cy.get('do-add-work-time-hours > div[class*="form"]')
            .should('have.class', 'ng-valid')
        cy.get('button[data-test*="save"]')
            .should('be.visible')
            .click()
        cy.wait('@wt-edited')
            .its('response.statusCode').should('eq', 200)
    });

    it("DOW-45", () => {
        cy.url()
            .should('eq', 'https://dev.digital-office.dso.lanit-tercom.com/time')
        cy.intercept('PATCH', '/worktime/edit*')
            .as('wt-edited')
        cy.get('mat-select[data-test*="month"]')
            .should('have.class', 'ng-star-inserted')
        cy.get('mat-select[formcontrolname="project"]')
            .click()
        cy.get('mat-option')
            .contains('Другое')
            .click()
        cy.get('input[formcontrolname="time"]')
            .clear()
            .type('744')
        cy.get('textarea[formcontrolname="comment"]')
            .clear()
            .type(makeText(30))
        cy.get('do-add-work-time-hours > div[class*="form"]')
            .should('have.class', 'ng-valid')
        cy.get('button[data-test*="save"]')
            .should('be.visible')
            .click()
        cy.wait('@wt-edited')
            .its('response.statusCode').should('eq', 200)
    });

    it("DOW-46", () => {
        cy.url()
            .should('eq', 'https://dev.digital-office.dso.lanit-tercom.com/time')
        cy.intercept('PATCH', '/worktime/edit*')
            .as('wt-edited')
        cy.get('mat-select[data-test*="month"]')
            .should('have.class', 'ng-star-inserted')
        cy.get('mat-select[formcontrolname="project"]')
            .click()
        cy.get('mat-option')
            .contains('Другое')
            .click()
        cy.get('input[formcontrolname="time"]')
            .clear()
            .type(Cypress._.random(745, 9999))
        cy.get('textarea[formcontrolname="comment"]')
            .clear()
            .type(makeText(30))
        cy.get('do-add-work-time-hours > div[class*="form"]')
            .should('have.class', 'ng-invalid')
        cy.get('button[data-test*="save"]')
            .should('be.visible')
            .click()
        cy.get('do-form-field[label="Количество часов"] mat-error')
            .invoke('prop', 'innerText')
            .should('eq', 'Максимальное значение: 744')
        cy.get('do-form-field[label="Количество часов"] mat-error')
            .scrollIntoView()
            .should('be.visible')
        cy.reload().wait(200)
    });

    it("DOW-47", () => {
        cy.url()
            .should('eq', 'https://dev.digital-office.dso.lanit-tercom.com/time')
        cy.intercept('PATCH', '/worktime/edit*')
            .as('wt-edited')
        cy.get('mat-select[data-test*="month"]')
            .should('have.class', 'ng-star-inserted')
        cy.get('mat-select[formcontrolname="project"]')
            .click()
        cy.get('mat-option')
            .contains('Другое')
            .click()
        cy.get('input[formcontrolname="time"]')
            .clear()
            .type(makeRuName(10))
        cy.get('input[formcontrolname="time"]')
            .invoke('val')
            .should('eq', '')
        cy.get('textarea[formcontrolname="comment"]')
            .clear()
            .type(makeText(30))
        cy.get('do-add-work-time-hours > div[class*="form"]')
            .should('have.class', 'ng-invalid')
        cy.get('button[data-test*="save"]')
            .should('be.visible')
            .click()
        cy.get('do-form-field[label="Количество часов"] mat-error')
            .invoke('prop', 'innerText')
            .should('eq', 'Обязательно для заполнения')
        cy.get('do-form-field[label="Количество часов"] mat-error')
            .scrollIntoView()
            .should('be.visible')
        cy.reload().wait(200)
    });

    it("DOW-48", () => {
        cy.url()
            .should('eq', 'https://dev.digital-office.dso.lanit-tercom.com/time')
        cy.intercept('PATCH', '/worktime/edit*')
            .as('wt-edited')
        cy.get('mat-select[data-test*="month"]')
            .should('have.class', 'ng-star-inserted')
        cy.get('mat-select[formcontrolname="project"]')
            .click()
        cy.get('mat-option')
            .contains('Другое')
            .click()
        cy.get('input[formcontrolname="time"]')
            .clear()
            .type('!@#$%^&**(()_+~')
        cy.get('input[formcontrolname="time"]')
            .invoke('val')
            .should('eq', '')
        cy.get('textarea[formcontrolname="comment"]')
            .clear()
            .type(makeText(30))
        cy.get('do-add-work-time-hours > div[class*="form"]')
            .should('have.class', 'ng-invalid')
        cy.get('button[data-test*="save"]')
            .should('be.visible')
            .click()
        cy.get('do-form-field[label="Количество часов"] mat-error')
            .invoke('prop', 'innerText')
            .should('eq', 'Обязательно для заполнения')
        cy.get('do-form-field[label="Количество часов"] mat-error')
            .scrollIntoView()
            .should('be.visible')
        cy.reload().wait(200)
    });

    it("DOW-49", () => {
        cy.url()
            .should('eq', 'https://dev.digital-office.dso.lanit-tercom.com/time')
        cy.intercept('PATCH', '/worktime/edit*')
            .as('wt-edited')
        cy.get('mat-select[data-test*="month"]')
            .should('have.class', 'ng-star-inserted')
        cy.get('mat-select[formcontrolname="project"]')
            .click()
        cy.get('mat-option')
            .contains('Другое')
            .click()
        cy.get('input[formcontrolname="time"]')
            .clear()
        cy.get('input[formcontrolname="time"]')
            .invoke('val')
            .should('eq', '')
        cy.get('textarea[formcontrolname="comment"]')
            .clear()
            .type(makeText(30))
        cy.get('do-add-work-time-hours > div[class*="form"]')
            .should('have.class', 'ng-invalid')
        cy.get('button[data-test*="save"]')
            .should('be.visible')
            .click()
        cy.get('do-form-field[label="Количество часов"] mat-error')
            .invoke('prop', 'innerText')
            .should('eq', 'Обязательно для заполнения')
        cy.get('do-form-field[label="Количество часов"] mat-error')
            .scrollIntoView()
            .should('be.visible')
        cy.reload().wait(200)
    });

    it("DOW-50", () => {
        cy.url()
            .should('eq', 'https://dev.digital-office.dso.lanit-tercom.com/time')
        cy.intercept('PATCH', '/worktime/edit*')
            .as('wt-edited')
        cy.get('mat-select[data-test*="month"]')
            .should('have.class', 'ng-star-inserted')
        cy.get('mat-select[formcontrolname="project"]')
            .click()
        cy.get('mat-option')
            .contains('Другое')
            .click()
        cy.get('input[formcontrolname="time"]')
            .clear()
            .type(Cypress._.random(1, 50))
        cy.get('textarea[formcontrolname="comment"]')
            .should('have.attr', 'maxlength')
            .and('eq', '500')
        cy.get('textarea[formcontrolname="comment"]')
            .clear()
            .type(makeText(1))
        cy.get('do-add-work-time-hours > div[class*="form"]')
            .should('have.class', 'ng-valid')
        cy.get('button[data-test*="save"]')
            .should('be.visible')
            .click()
        cy.wait('@wt-edited')
            .its('response.statusCode').should('eq', 200)
    });

    it("DOW-51", () => {
        cy.url()
            .should('eq', 'https://dev.digital-office.dso.lanit-tercom.com/time')
        cy.intercept('PATCH', '/worktime/edit*')
            .as('wt-edited')
        cy.get('mat-select[data-test*="month"]')
            .should('have.class', 'ng-star-inserted')
        cy.get('mat-select[formcontrolname="project"]')
            .click()
        cy.get('mat-option')
            .contains('Другое')
            .click()
        cy.get('input[formcontrolname="time"]')
            .clear()
            .type(Cypress._.random(1, 50))
        cy.get('textarea[formcontrolname="comment"]')
            .should('have.attr', 'maxlength')
            .and('eq', '500')
        cy.get('textarea[formcontrolname="comment"]')
            .clear()
            .type(makeText(500))
        cy.get('textarea[formcontrolname="comment"]')
            .invoke('prop', 'textLength')
            .should('eq', 500)
        cy.get('do-add-work-time-hours > div[class*="form"]')
            .should('have.class', 'ng-valid')
        cy.get('button[data-test*="save"]')
            .should('be.visible')
            .click()
        cy.wait('@wt-edited')
            .its('response.statusCode').should('eq', 200)
    });

    it("DOW-52", () => {
        cy.url()
            .should('eq', 'https://dev.digital-office.dso.lanit-tercom.com/time')
        cy.intercept('PATCH', '/worktime/edit*')
            .as('wt-edited')
        cy.get('mat-select[data-test*="month"]')
            .should('have.class', 'ng-star-inserted')
        cy.get('mat-select[formcontrolname="project"]')
            .click()
        cy.get('mat-option')
            .contains('Другое')
            .click()
        cy.get('input[formcontrolname="time"]')
            .clear()
            .type(Cypress._.random(1, 50))
        cy.get('textarea[formcontrolname="comment"]')
            .should('have.attr', 'maxlength')
            .and('eq', '500')
        cy.get('textarea[formcontrolname="comment"]')
            .clear()
            .type(makeText(Cypress._.random(501, 999)))
        cy.get('textarea[formcontrolname="comment"]')
            .invoke('prop', 'textLength')
            .should('eq', 500)
        cy.get('do-add-work-time-hours > div[class*="form"]')
            .should('have.class', 'ng-valid')
        cy.get('button[data-test*="save"]')
            .should('be.visible')
            .click()
        cy.wait('@wt-edited')
            .its('response.statusCode').should('eq', 200)
    });

    it("DOW-53", () => {            //this case only works with a certain design version!
        cy.url()
            .should('eq', 'https://dev.digital-office.dso.lanit-tercom.com/time')
        cy.get('mat-select[formcontrolname="project"]')
            .click()
        cy.get('mat-option')
            .contains('Другое')
            .click()
        cy.get('do-projects table td')
            .should('have.length.greaterThan', 1)
            .its('length')
            .then(lenght => {
                let l = lenght;                         //the number of cells
                let cm = l - 2;                         //calculate the number of the last comment (other)
                let ot = l - 4;                         //calculate the number of the last "hours" cell (other)
                cy.log(l, cm, ot)

                cy.get('do-projects table td')
                    .eq(ot)
                    .invoke('prop', 'textContent')
                    .then((text2) => {
                        cy.get('input[formcontrolname="time"]')
                            .invoke('val')
                            .should('eq', text2)                //compare with the hours in the form
                    })

                cy.get('do-projects table td')
                    .eq(cm)
                    .find('do-comment p')
                    .invoke('prop', 'textContent')
                    .then((text3) => {
                        cy.get('textarea[formcontrolname="comment"]')
                            .invoke('val')
                            .should('eq', text3)                //compare with the comment in the form
                    })
            })
    });

    it("DOW-56", () => {    //this case only works with a certain design version!
        cy.url()
            .should('eq', 'https://dev.digital-office.dso.lanit-tercom.com/time')
        cy.intercept('PATCH', '/worktime/edit*')
            .as('wt-edited')
        cy.get('do-projects table tr')
            .should('have.length.greaterThan', 1)
            .its('length')
            .then(length => {
                let l = length;
                cy.log(l)
                cy.get('do-projects table td > button') //nesting > excludes comment reversal buttons
                    .eq(l - 2) // "other" is always the last one in the table, but there is no button in the header
                    .click({ force: true })
            })
        cy.get('div[class="dialog-content"]')
            .should('be.visible')
        cy.get('input[formcontrolname="userHours"]')
            .clear()
            .type(Cypress._.random(5, 25))
        cy.get('button[data-test*="edit"]')
            .should('be.visible')
            .click()
        cy.wait('@wt-edited')
    });

    it("DOW-57", () => {
        cy.url()
            .should('eq', 'https://dev.digital-office.dso.lanit-tercom.com/time')
        cy.intercept('PATCH', '/worktime/edit*')
            .as('wt-edited')
        cy.get('do-projects table tr')
            .should('have.length.greaterThan', 1)
            .its('length')
            .then(length => {
                let l = length;
                cy.log(l)
                cy.get('do-projects table td > button')
                    .eq(l - 2)
                    .click({ force: true })
            })
        cy.get('div[class="dialog-content"]')
            .should('be.visible')
        cy.get('textarea[formcontrolname="description"]')
            .clear()
            .type(makeText(30))
        cy.get('button[data-test*="edit"]')
            .should('be.visible')
            .click()
        cy.wait('@wt-edited')
    });

    it("DOW-58", () => {
        cy.url()
            .should('eq', 'https://dev.digital-office.dso.lanit-tercom.com/time')
        cy.intercept('PATCH', '/worktime/edit*')
            .as('wt-edited')
        cy.get('do-projects table tr')
            .should('have.length.greaterThan', 1)
            .its('length')
            .then(length => {
                let l = length;
                cy.log(l)
                cy.get('do-projects table td > button')
                    .eq(l - 2)
                    .click({ force: true })
            })
        cy.get('div[class="dialog-content"]')
            .should('be.visible')
        cy.get('input[formcontrolname="userHours"]')
            .clear()
            .type(Cypress._.random(5, 25))
        cy.get('textarea[formcontrolname="description"]')
            .clear()
            .type(makeText(30))
        cy.get('button[data-test*="edit"]')
            .should('be.visible')
            .click()
        cy.wait('@wt-edited')
    });

    it("DOW-59", () => {
        cy.url()
            .should('eq', 'https://dev.digital-office.dso.lanit-tercom.com/time')
        cy.get('do-projects table tr')
            .should('have.length.greaterThan', 1)
            .its('length')
            .then(length => {
                let l = length;
                cy.log(l)
                cy.get('do-projects table td > button')
                    .eq(l - 2)
                    .click({ force: true })
            })
        cy.get('div[class="dialog-content"]')
            .should('be.visible')
        cy.get('input[formcontrolname="userHours"]')
            .clear()
            .type(Cypress._.random(5, 50))
        cy.get('textarea[formcontrolname="description"]')
            .clear()
            .type(makeRuName(40))
        cy.get('button[data-test*="close-dialog-btn"]')
            .should('be.visible')
            .click()
    });

    it("DOW-60", () => {
        cy.url()
            .should('eq', 'https://dev.digital-office.dso.lanit-tercom.com/time')
        cy.get('do-projects table tr')
            .should('have.length.greaterThan', 1)
            .its('length')
            .then(length => {
                let l = length;
                cy.log(l)
                cy.get('do-projects table td > button')
                    .eq(l - 2)
                    .click({ force: true })
            })
        cy.get('div[class="dialog-content"]')
            .should('be.visible')
        cy.get('input[formcontrolname="userHours"]')
            .clear()
            .type(makeRuName(10))
        cy.get('input[formcontrolname="userHours"]')
            .invoke('val')
            .and('eq', '')
        cy.get('button[data-test*="edit"]')
            .click()
        cy.get('do-form-field[label="Количество часов"] mat-error')
            .invoke('prop', 'innerText')
            .should('eq', 'Обязательно для заполнения')
        cy.get('do-form-field[label="Количество часов"] mat-error')
            .should('be.visible')
        cy.get('button[data-test*="close-dialog-btn"]')
            .should('be.visible')
            .click()
    });

    it("DOW-61", () => {
        cy.url()
            .should('eq', 'https://dev.digital-office.dso.lanit-tercom.com/time')
        cy.get('do-projects table tr')
            .should('have.length.greaterThan', 1)
            .its('length')
            .then(length => {
                let l = length;
                cy.log(l)
                cy.get('do-projects table td > button')
                    .eq(l - 2)
                    .click({ force: true })
            })
        cy.get('div[class="dialog-content"]')
            .should('be.visible')
        cy.get('input[formcontrolname="userHours"]')
            .clear()
            .type('!@#$%^&*())_+!~')
        cy.get('input[formcontrolname="userHours"]')
            .invoke('val')
            .and('eq', '')
        cy.get('button[data-test*="edit"]')
            .click()
        cy.get('do-form-field[label="Количество часов"] mat-error')
            .invoke('prop', 'innerText')
            .should('eq', 'Обязательно для заполнения')
        cy.get('do-form-field[label="Количество часов"] mat-error')
            .should('be.visible')
        cy.get('button[data-test*="close-dialog-btn"]')
            .should('be.visible')
            .click()
    });

    it("DOW-62", () => {
        cy.url()
            .should('eq', 'https://dev.digital-office.dso.lanit-tercom.com/time')
        cy.get('do-projects table tr')
            .should('have.length.greaterThan', 1)
            .its('length')
            .then(length => {
                let l = length;
                cy.log(l)
                cy.get('do-projects table td > button')
                    .eq(l - 2)
                    .click({ force: true })
            })
        cy.get('div[class="dialog-content"]')
            .should('be.visible')
        cy.get('textarea[formcontrolname="description"]')
            .clear()
        cy.get('button[data-test*="edit"]')
            .click()
        cy.get('do-form-field[label="Комментарий"] mat-error')
            .invoke('prop', 'innerText')
            .should('eq', 'Обязательно для заполнения')
        cy.get('do-form-field[label="Комментарий"] mat-error')
            .should('be.visible')
        cy.get('button[data-test*="close-dialog-btn"]')
            .should('be.visible')
            .click()
    });

});    
